// Creates text classes for all fonts
@each $font-key, $font-map in $project-fonts {

  .#{$font-key}-text {

    font-family: get-font-family($font-map), $fallback-font;
  }
}

// Generate responsive font sizes
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $font-size in $font-sizes {
      .fs#{$infix}-#{$font-size} {
        font-size: #{$font-size}px;
      }
    }
  }
}

//Generate letter-spacing and line-height with grid-breakpoint to use in html
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $key, $value in $spacers {

      $unitLess-value: strip-unit($value);

      @if ($unitLess-value >= 0) {

        .lh#{$infix}-#{$key} {
          line-height: $unitLess-value+px;
        }
      }

      .ti#{$infix}-#{$key} {
        text-indent: $unitLess-value+px;
      }

      .ls#{$infix}-#{$key} {
        letter-spacing: $unitLess-value+px;
      }

      @if ($unitLess-value != 0) {

        .ls#{$infix}-n#{$key} {
          letter-spacing: (-$unitLess-value)+px;
        }
      }
    }
  }
}

@mixin font-size-variation($md-fs, $md-lh: $md-fs, $xl-fs, $xl-lh: $xl-fs) {

  @include media-breakpoint-up(xl) {

    font-size: $md-fs;
    line-height: $md-lh;
  }

  @include media-breakpoint-up(xxl) {

    font-size: $xl-fs;
    line-height: $xl-lh;
  }
}

h1, h2, .h1, .h2 {


  @include font-size-variation(6.5rem, 1.0, 7.5rem, 1.0);
}

h3, .h3 {

  @include font-size-variation(1.875rem, 1.0, 2.5rem, 1.0);
}

p {

  @include media-breakpoint-up(xl) {

    font-size: 1.125rem;
  }
}

//:is(h1, h2, h3, h4, h5, h6) {
//
//
//}

.text-underline {

  text-decoration: underline;
}

.text-outline {

  -webkit-text-fill-color: transparent;
  -webkit-text-stroke-width: 3px;
}

